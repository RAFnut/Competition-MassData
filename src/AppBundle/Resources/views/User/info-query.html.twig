{# dobijas podatke u promenljivoj query #}
<!doctype>
<html>
    <head>
        {% include 'AppBundle:Templates:required-css.html.twig' %}
        <link href="{{ asset('bundles/app/css/infoquery.css') }}" rel="stylesheet">
    </head>

    <body>
        
        <nav class="navbar navbar-default">
          <div class="container-fluid">
            <div class="navbar-header">
            <div class="logo-holder">
                <a href="#"><img src="{{ asset('bundles/app/img/logo.png') }}"></a>
            </div>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">


              <ul class="nav navbar-nav navbar-right">

                <li><button type="submit" class="btn btn-navigation">Home</button></li>
                {% if premium == true %}
                    <li><a href="#"><button type="submit" class="btn btn-navigation">Tracking</button></a></li>
                {% endif %}
                <li><a href="{{path('premium_queries_list')}}"><button type="submit" class="btn btn-navigation">History</button></a></li>
                <li><a href="{{path('logout')}}"><button type="submit" class="btn btn-navigation">Log out</button></a></li>
              </ul>
            </div>
          </div>
        </nav>

        <div class="row">
            <div class="col-md-6">
                <div style="height: 500px;" id="GoodMap"></div> 
            </div>
            <div class="col-md-6">
                <div style="height: 500px;" id="BadMap"></div> 
            </div>            
        </div>
        

        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
        {% include 'AppBundle:Templates:required-js.html.twig' %}
        <script type="text/javascript" src="{{ asset('bundles/app/js/mapsHelper.js') }}"></script>

        <script type="text/javascript">
        var styleArray = [{"featureType":"administrative","elementType":"labels.text.fill","stylers":[{"color":"#444444"}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":-100},{"lightness":45}]},{"featureType":"road.highway","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#46bcec"},{"visibility":"on"}]}];
            var dataGood = [];
            var dataBad = [];
            {% for tweet in query.tweet %}
                {% if tweet.impression >= 0 %}
                dataGood.push({
                    text: "{{tweet.text|replace({"\n":' ', "\r":' '})}}",
                    lat: "{{tweet.lat}}",
                    lng: "{{tweet.lng}}",
                    score: "{{tweet.impression}}"
                    }
                    );
                {% else %}
                dataBad.push({
                    text: "{{tweet.text|replace({"\n":' ', "\r":' '})}}",
                    lat: "{{tweet.lat}}",
                    lng: "{{tweet.lng}}",
                    score: "{{tweet.impression}}"
                    }
                    );                
                {% endif %}
            {% endfor %}    
            function generateGood(){
                var styledMap = new google.maps.StyledMapType(styleArray,{name: "Styled Map"});
                var allGoodMarkers = [];
                var mapGood;
                var boundsGood = new google.maps.LatLngBounds();
                var mapOptionsGood = {
                    zoom: 8,
                    mapTypeControlOptions: {
                      mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
                    }
                };

                mapGood = new google.maps.Map(document.getElementById("GoodMap"), mapOptionsGood);
                mapGood.setTilt(45);
                
                mapGood.mapTypes.set('map_style', styledMap);
                mapGood.setMapTypeId('map_style');

                for( i = 0; i < dataGood.length; i++ ) {
                var position = new google.maps.LatLng(dataGood[i].lat,dataGood[i].lng);
                boundsGood.extend(position);

                markerGood = new google.maps.Marker({
                    position: position
                });

                allGoodMarkers.push(markerGood);
                var infoWindow = new google.maps.InfoWindow(), markerGood, i;

                google.maps.event.addListener(markerGood, 'click', (function(marker, i) {
                    return function() {
                        var content;

                        content = "<p>"+dataGood[i].text+"</p> <p> Sentiment score: "+dataGood[i].score+"</p>";
                        infoWindow.setContent(content);
                        infoWindow.open(mapGood, marker);
                    }
                })(markerGood, i));
                mapGood.fitBounds(boundsGood);                    
                }
                var markerCluster = new MarkerClusterer(mapGood, allGoodMarkers);

            }
            generateGood();
            function generateBad(){
                var styledMap = new google.maps.StyledMapType(styleArray,{name: "Styled Map"});
                var allGoodMarkers = [];
                var mapGood;
                var boundsGood = new google.maps.LatLngBounds();
                var mapOptionsGood = {
                    zoom: 8,
                    mapTypeControlOptions: {
                      mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
                    }
                };

                mapGood = new google.maps.Map(document.getElementById("BadMap"), mapOptionsGood);
                mapGood.setTilt(45);
                
                mapGood.mapTypes.set('map_style', styledMap);
                mapGood.setMapTypeId('map_style');

                for( i = 0; i < dataBad.length; i++ ) {
                var position = new google.maps.LatLng(dataBad[i].lat,dataBad[i].lng);
                boundsGood.extend(position);

                markerGood = new google.maps.Marker({
                    position: position
                });

                allGoodMarkers.push(markerGood);
                var infoWindow = new google.maps.InfoWindow(), markerGood, i;

                google.maps.event.addListener(markerGood, 'click', (function(marker, i) {
                    return function() {
                        var content;

                        content = "<p>"+dataBad[i].text+"</p> <p> Sentiment score: "+dataBad[i].score+"</p>";
                        infoWindow.setContent(content);
                        infoWindow.open(mapGood, marker);
                    }
                })(markerGood, i));
                mapGood.fitBounds(boundsGood);                    
                }
                var markerCluster = new MarkerClusterer(mapGood, allGoodMarkers);

            }           
            generateBad();

        </script>
 


    <body>
</html>